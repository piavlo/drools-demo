/*
package com.zohararad.rules

import com.zohararad.GenericEvent;
import com.zohararad.EventCounter;
import java.util.Date;

dialect "mvel"

declare GenericEvent
  @role( event )
  @expires( 20s )
end

declare EventCounter
  @role( event )
end

rule "check event count 2"
  when
    $ec: EventCounter( count > 4 ) from accumulate(
           $e2 : GenericEvent( $event : event == "test_event_1" ) over window:time(10s) from entry-point EventsStream,
           init( EventCounter ec = new EventCounter(); ),
           action( ec.addEvent( $event ); ),
           reverse( ec.removeEvent( $event ); ),
           result( ec ) );
  then
    System.out.println($ec.event + ": " + $ec.count + ". Fire rules");
end

rule "check event count 3"
  when
    $ec: EventCounter( count > 4 ) from accumulate(
           $e2 : GenericEvent( $event : event == "test_event_2" ) over window:time(10s) from entry-point EventsStream,
           init( EventCounter ec = new EventCounter(); ),
           action( ec.addEvent( $event ); ),
           reverse( ec.removeEvent( $event ); ),
           result( ec ) );
  then
    System.out.println($ec.event + ": " + $ec.count + ". Fire rules");
end

rule "check event count"
  when
    $e: Number( doubleValue > 0 ) from accumulate(
          GenericEvent($count : count, $event : event) over window:time(1m) from entry-point EventsStream,
          init( int total = 0; ),
          action( total += $count; ),
          reverse( total -= $count; ),
          result( total / 10 )
        )
  then
    System.out.println($e + ". Fire rules");
end

rule "setup event counter"
  when
    $e : GenericEvent( $event : event ) from entry-point EventsStream
    not( EventCounter( name == $event ) )
  then
    EventCounter ec = new EventCounter();
    ec.name = $event;
    ec.count = 1;
    insert( ec );
    System.out.println("Add new counter for " + ec.name);
end

rule "increment event count" lock-on-active
  when
    e : GenericEvent( $event : event ) from entry-point EventsStream
    ec: EventCounter( name == $event )
  then
    int c = ec.count;
    modify(ec){
      count = c + 1;
    }
    System.out.println(ec.name + ":" + ec.count);
end

rule "check event count"
  when
    e : GenericEvent( $event : event ) from entry-point EventsStream
    ec: EventCounter( name == $event, count > 3 ) over window:time( 10ms )
  then
    System.out.println(ec.name + ":" + ec.count + ". Fire rules");
    modify(ec){
      count = 0;
    }
end
*/